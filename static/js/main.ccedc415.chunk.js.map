{"version":3,"sources":["assets/go.svg","assets/icon.svg","assets/screenshots sync /^/.*/.jpg$","assets/screenshots/0.jpg","assets/screenshots/1.jpg","assets/screenshots/2.jpg","assets/screenshots/3.jpg","assets/screenshots/4.jpg","assets/screenshots/5.jpg","assets/screenshots/6.jpg","assets/screenshots/7.jpg","assets/screenshots/8.jpg","assets/screenshots/9.jpg","assets/screenshots/a8282cd3-c7d0-48cc-8ceb-b766afb6754c.jpg","assets/screenshots/dd972fa8-c32e-4a42-b423-f46b4d1d69a9.jpg","utils/util.js","screens/Navbar/Navbar.js","redux/actions/index.js","utils/detailsData.js","components/Slideshow/SlideShow.js","components/ProgressBar/ProgressBar.js","screens/DetailsScreen/Details.js","screens/HomeScreen/Home.js","screens/LandingScreen/Landing.js","screens/Overview/Overview.js","screens/Improvements/Improvement.js","App.js","serviceWorker.js","redux/reducers/screenReducer.js","redux/reducers/navbarReducer.js","redux/reducers/index.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","animate","elem","undefined","document","getElementsByClassName","offsetTop","window","scroll","top","left","behavior","getTextWidth","font","widthParent","text","padding","increment","c","getElementById","ctx","getContext","fontsize","i","metrics","measureText","width","NAVBAR","useSelector","state","screenReducer","active","showMenu","navbarReducer","dispatch","useDispatch","console","log","widthBox","className","size","color","onClick","type","payload","setshowMenu","style","data","heading","subheading","SlideShow","props","loadData","op","push","key","temp","opacity","alt","src","require","sizeLeft","sizeRight","this","navigate","onMouseOver","setState","onMouseOut","React","Component","ProgressBar","marker","total","borderRadius","marginLeft","marginTop","height","backgroundColor","Details","useState","index","setIndex","detailsData","setDetailsData","widthHeading","length","Math","min","iconData","afterelem","eleStyle","right","bottom","subHeadingStyle","cntnt","fontSize","item","flex","Home","ButtonLogo","Landing","fontLoaded","fontH","fontS","widthsubHeading","fontFamily","Overview","display","paddingRight","textDecoration","paddingLeft","borderColor","margin","paddingTop","borderWidth","marginBottom","Improvement","position","Icon","App","fonts","onloadingdone","fontFaceSetEvent","useEffect","handleScroll","currScroll","documentElement","scrollTop","home","details","overview","improvement","res","handleResize","setTimeout","innerWidth","innerHeight","addEventListener","removeEventListener","Boolean","location","hostname","match","action","allReducers","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ccedc415.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/go.e84e598f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon.95377ac4.svg\";","var map = {\n\t\"./0.jpg\": 36,\n\t\"./1.jpg\": 37,\n\t\"./2.jpg\": 38,\n\t\"./3.jpg\": 39,\n\t\"./4.jpg\": 40,\n\t\"./5.jpg\": 41,\n\t\"./6.jpg\": 42,\n\t\"./7.jpg\": 43,\n\t\"./8.jpg\": 44,\n\t\"./9.jpg\": 45,\n\t\"./a8282cd3-c7d0-48cc-8ceb-b766afb6754c.jpg\": 46,\n\t\"./dd972fa8-c32e-4a42-b423-f46b4d1d69a9.jpg\": 47\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35;","module.exports = __webpack_public_path__ + \"static/media/0.260ff6d6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.74642c7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.dbe089ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.448e5cf9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.54894b04.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.50b82578.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.518c2711.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.f9a360b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.54894b04.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9.448e5cf9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/a8282cd3-c7d0-48cc-8ceb-b766afb6754c.f42f93f1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dd972fa8-c32e-4a42-b423-f46b4d1d69a9.04408f0d.jpg\";","    export const animate = (elem) => {\r\n        elem = document.getElementsByClassName(elem);\r\n        if (elem[0] !== undefined)\r\n            elem = elem[0];\r\n        var offsetTop = elem.offsetTop +2;\r\n\r\n        window.scroll({\r\n            top: offsetTop,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n        });\r\n    };\r\n\r\n    export const getTextWidth = (font,widthParent,text ,padding,increment=5) => {\r\n        // re-use canvas object for better performance\r\n        var c = document.getElementById(\"canvas\");\r\n        var ctx = c.getContext(\"2d\");\r\n        let fontsize=12;\r\n        for(let i=12;i<250;i+=increment){\r\n            ctx.font = i+\"px \"+font;\r\n            var metrics = ctx.measureText(text);\r\n            let width = metrics.width;\r\n            if(widthParent>width+padding)\r\n                fontsize =  i;\r\n            else\r\n                break;\r\n        }\r\n        return fontsize;\r\n    };\r\n","import React from 'react';\r\nimport './Navbar.css';\r\nimport {animate} from '../../utils/util'\r\nimport { FiAlignRight } from \"react-icons/fi\";\r\nimport {useSelector} from 'react-redux';\r\nimport {setShowMenu} from '../../redux/actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst NAVBAR = ()=>{\r\n\r\n    const {width,active} = useSelector(state=>state.screenReducer);\r\n    const {showMenu} = useSelector(state=>state.navbarReducer);\r\n    const dispatch = useDispatch();\r\n    console.log({showMenu});\r\n    const setshowMenu = (showMenu)=>{\r\n        dispatch(setShowMenu({showMenu}));\r\n    }\r\n\r\n    let widthBox = '651px';\r\n    if(!width || width<=650){\r\n        if(showMenu)\r\n            widthBox = '45%';\r\n        else\r\n            widthBox = '0%';\r\n    }\r\n    \r\n    return (\r\n        <div className='nav'>\r\n        <FiAlignRight size={30} color='white' className='icon' onClick={()=>{setshowMenu(!showMenu)}}/>  \r\n            <div className='nav-heading' onClick={()=>{animate('content',-1)}}>汉字</div>\r\n                <div className=\"box\" style={{width:widthBox}}>\r\n                <div className={active === 0 ? \"link active-home\" : \"link\"}> <li onClick={() => animate('home-content')}>Home</li></div>\r\n                <div className={active === 1 ? \"link active-details\" : \"link\"}> <li onClick={() => animate('details-content')}>Details</li></div>\r\n                <div className={active === 2 ? \"link active-overview\" : \"link\"}> <li onClick={() => animate('overview-content')}>Overview</li></div>\r\n                <div className={active === 3 ? \"link active-improvement\" : \"link\"}> <li onClick={() => animate('improvement-content')}>Improvements</li></div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n \r\nexport default NAVBAR;\r\n    ","export const resize= () =>{\r\n    return {\r\n        type : 'resize',\r\n        payload : {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n          }\r\n    }\r\n}\r\n\r\nexport const activeNavBarComponent= (payload) =>{\r\n    return {\r\n        type : 'activeNavBarComponent',\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setShowMenu = (payload) =>{\r\n    return {\r\n        type : 'setShowMenu',\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setFontLoaded = (payload) => {\r\n    return {\r\n        type: 'setFontLoaded',\r\n        payload\r\n    }\r\n}","const data = [{\r\n        heading: 'Registration',\r\n        subheading: [\r\n            'The user starts on this page . This is standard login/registration page.'\r\n        ]\r\n    },\r\n    {\r\n        heading: 'Home',\r\n        subheading: [\r\n            'The user is presented with a search bar and other options.'\r\n        ]\r\n    },\r\n    {\r\n        heading: 'Search',\r\n        subheading: [\r\n            \"The user can search for Chinese character via it's pronunciation(pinyin) or the exact character(via a Chinese keyboard).\",\r\n            \"Since many characters may have a similar pinyin the search is designed to list all possible characters whose sound  starts with the search term ('ren' as depicted in the image).\",\r\n            \"The user can than scroll this list and select a character to display\"\r\n        ]\r\n    },\r\n    {\r\n        heading: 'CHARACTER',\r\n        subheading: [\r\n            \"This gif depicts all the information you can access . initially you will see the character and a stroke animation depicting how the character is to be drawn.\",\r\n            \"To repeat the animation just press on I button twice. Pressing on I button once loads a list of corresponding images which can be scrolled horizontally.\",\r\n            \"To the right of I button is a list of meanings for that character there can me multiple meanings which can be accessed via vertical scrolling.\",\r\n            \"Clicking on the AUDIO icon plays the pronunciation of that character.\"\r\n        ]\r\n    },\r\n    {\r\n        heading: 'LEARN',\r\n        subheading: [\r\n            \"The Hanyu Shuiping Kaoshi, translated as the Chinese Proficiency Test used in China, is the standardized test of Standard Chinese language proficiency of China for non-native speakers such as foreign students and overseas Chinese. \",\r\n            \"These tests have various levels and each level corresponds to a set of characters which can be accessed from these options.\"\r\n        ]\r\n    },\r\n    {\r\n        heading: 'CHARACTER LIST',\r\n        subheading: [\r\n            \"App fetches the next 10 characters from server and loads it in memory . user can tap on buttons to navigate as depicted in gif and CHARCTER PAGE.\"\r\n        ]\r\n    },\r\n    {\r\n        heading: 'QUIZ',\r\n        subheading: [\r\n            \"The quiz contains of 10 random questions generated from the set of characters you  user has already seen in the HSK's .\",\r\n            \"Each question is of the from Select multiple options for a particular character. There is negative marking also. Selecting all correct options yield 1 point.\",\r\n            \"Sound option: Tapping on sound option once plays the sound and selects the option .To deselect the option user needs to tap on sound option again.\",\r\n            \"Image  option: Tapping on image option once magnifies the image tap again to select the option. .To deselect the option user needs to tap on image to magnify it and tap again to deselect. Image option can also be toggled by long pressing the option.\"\r\n        ]\r\n    },\r\n    {\r\n        heading: 'Quiz',\r\n        subheading: [\r\n            \"At the end of the quiz you are given a score.\"\r\n        ]\r\n    },\r\n    {\r\n        heading: 'Draw and Discover',\r\n        subheading: [\r\n            \"Yet to be imlemented.\"\r\n        ]\r\n    }\r\n]\r\n\r\nexport default data;","import React from 'react';\r\nimport './Slideshow.css';\r\nimport { BsFillCaretLeftFill, BsFillCaretRightFill } from 'react-icons/bs';\r\n\r\nexport default class SlideShow extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { sizeLeft: 40, sizeRight: 40 }\r\n    }\r\n\r\n    render() {\r\n        let active = this.props.active;\r\n        let navigate = this.props.navigate;\r\n        return (\r\n\r\n            <div className='slideshow-content'>\r\n\r\n                <div className='slideshow-icon'><BsFillCaretLeftFill size={this.state.sizeLeft} onMouseOver={() => { this.setState({ ...this.state, sizeLeft: 60 }) }} onMouseOut={() => { this.setState({ ...this.state, sizeLeft: 40 }) }} onClick={() => {\r\n                    if (active !== 0) navigate(active - 1)\r\n                }\r\n                } /></div>\r\n                {this.loadData(active)}\r\n                <div className='slideshow-icon'><BsFillCaretRightFill onMouseOver={() => { this.setState({ ...this.state, sizeRight: 60 }) }} onMouseOut={() => { this.setState({ ...this.state, sizeRight: 40 }) }} size={this.state.sizeRight} onClick={() => { if (active !== 8) navigate(active + 1) }} /></div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    // <div className='slideshow-left'>{active === 0 ? <div className='empty'></div>:}</div>\r\n    // <div className='slideshow-main'><img alt=\"Loading...\" src={require('../assets/screenshots/' + active +'.jpg')} /></div>\r\n    // <div className='slideshow-right'>{active === 2 ? <div className='empty'></div>:<img alt=\"Loading...\" src={require('../assets/screenshots/' + (1+active) +'.jpg')} />}</div>\r\n\r\n    loadData = (active) => {\r\n        var op = [];\r\n        if(active === 0 ){\r\n            op.push(\r\n                <div key={0} className='slideshow-image slideshow-left'>\r\n                    <div className='empty'></div></div>\r\n            );\r\n        }\r\n        for (let i = 0; i <=8; i++) {\r\n            var temp = 'slideshow-image';\r\n            if (i === active - 1)\r\n                temp += ' slideshow-left'\r\n            if (i === active)\r\n                temp += ' slideshow-main'\r\n            if (i === active + 1)\r\n                temp += ' slideshow-right'\r\n            \r\n            var opacity = 0;\r\n            if(i == active)\r\n                opacity =1;\r\n            if(i == active-1 || i == active+1)\r\n                opacity = 0.65;\r\n            op.push(\r\n                <div key={i+1} className={temp} style={{opacity:opacity }}>\r\n                    <img alt=\"Loading...\" src={require('../../assets/screenshots/' + (i) + '.jpg')} /></div>\r\n            );\r\n        }\r\n        if(active === 8 ){\r\n            op.push(\r\n                <div key={10} className='slideshow-image slideshow-right'>\r\n                    <div className='empty'></div></div>\r\n            );\r\n        }\r\n        return op;\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nconst ProgressBar = (props) =>{\r\n    console.log(props);\r\n    const {active,total} = props;\r\n    const marker = 100/total;\r\n    return (\r\n        <div style={{borderRadius:'10px',marginLeft:'10%',marginTop:'2vh',width:'80%',height:'5px',backgroundColor:'black'}}>\r\n            <div style={{borderRadius:'10px',width:`${marker}%`,height:'6px',backgroundColor:'#b7ffa8',marginLeft:`${active*marker}%`}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import React, { useState } from 'react';\r\nimport './Details.css';\r\nimport { getTextWidth } from '../../utils/util';\r\nimport data from '../../utils/detailsData';\r\nimport { useSelector } from 'react-redux';\r\nimport SlideShow from '../../components/Slideshow/SlideShow.js';\r\nimport ProgressBar from '../../components/ProgressBar/ProgressBar.js';\r\n\r\n\r\n\r\nconst Details = () => {\r\n\r\n    const { width } = useSelector(state => state.screenReducer);\r\n    const [index, setIndex] = useState(0);\r\n    const [detailsData, setDetailsData] = useState(false);\r\n    console.log({ detailsData });\r\n    const navigate = (index) => {\r\n        setIndex(index);\r\n    }\r\n    let widthHeading = 1000;\r\n\r\n    for (var i = 0; i < data.length; i++) {\r\n        widthHeading = Math.min(widthHeading, getTextWidth(\"CodyStar\", 0.95 * width, data[i].heading, 10));\r\n    }\r\n    if (!widthHeading)\r\n        widthHeading = 80;\r\n    const iconData = !detailsData ? 'i' : 'X';\r\n    const afterelem = !detailsData ? 'know more' : 'close';\r\n    const eleStyle = !detailsData ? {\r\n        top: '24%',\r\n        left: '0',\r\n        right: '100%',\r\n        bottom: '76%',\r\n        padding: '0'\r\n    } : {}\r\n\r\n    const subHeadingStyle = !detailsData?{\r\n       top:'-70vh',\r\n       opacity:0,\r\n    }:{};\r\n    return (\r\n        <div className=\"details-content\">\r\n            <br />\r\n            {width < 900 ? <div className='circle' cntnt={afterelem} onClick={() => { setDetailsData(!detailsData) }}><span>{iconData}</span></div> : null}\r\n            <div className=\"details-heading\" style={{ fontSize: widthHeading }}>\r\n                {data[index].heading}\r\n            </div>\r\n            <div className=\"details-body\" >\r\n                <SlideShow active={index} navigate={navigate} />\r\n\r\n                {width > 900 ? <div className=\"details-data\" >\r\n                    <div className=\"details-subheading\">\r\n                        {data[index].subheading.map((item, index) => (\r\n                            <div key={index} style={{flex:1}}><br />{item}</div>\r\n                        ))}\r\n                    </div>\r\n                </div> : null}\r\n                {width < 900?<div className=\"details-data2\" style={{ ...eleStyle }}>\r\n                    <div className=\"details-subheading2\" style={{...subHeadingStyle}}>\r\n                        {data[index].subheading.map((item, index) => (\r\n                            <div key={index} className=\"elem\"><br />{item}</div>\r\n                        ))}\r\n                    </div>\r\n                </div>:null}\r\n\r\n            </div>\r\n            <ProgressBar active={index} total={data.length} />\r\n            <br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details;","import React from 'react';\r\nimport './Home.css';\r\nimport ButtonLogo from '../../assets/go.svg'\r\nimport { animate } from '../../utils/util';\r\n\r\n\r\nconst Home = () =>{\r\n    return (\r\n        <div className=\"home-content\">\r\n            <div className=\"waste\" style={{height:'17.5vh'}}></div>\r\n            <div className=\"home-text\">\r\n                <div className=\"home-heading\">\r\n                Chinese character is a learning app for Chinese characters . There are more than 8000 characters which user can search and see the character's meaning, stroke order, related images with meaning, how it is pronounced . \r\n\r\n                </div>\r\n                <div className=\"home-subheading\">\r\n                <div style={{flex:1,padding:'10px'}}> \r\n                It also provides a progressive way to learn the characters for various HSK levels with an quiz for the characters which a user has seen so far .\r\n                </div>\r\n                <div style={{flex:1,padding:'10px'}} >\r\n                This project is the basis of a much higher level project which will have many more features .\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"home-subheading-button\">\r\n            <div className=\"home-button\" onClick={()=>{animate('details-content')}}>\r\n                    <span className=\"home buttonText\">UI Workflow</span>\r\n                    <img className=\"buttonImage\" src={ButtonLogo} width={35} alt=\"Logo\" />\r\n            </div>\r\n\r\n            <div className=\"home-button\" onClick={()=>{animate('overview-content')}}>>\r\n                    <span className=\"home buttonText\">Overview</span>\r\n                    <img className=\"buttonImage\" src={ButtonLogo} width={35} alt=\"Logo\" />\r\n            </div>\r\n            </div>\r\n            <div className=\"waste\" style={{height:'9vh'}}></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import React from 'react';\r\nimport './Landing.css';\r\nimport ButtonLogo from '../../assets/go.svg'\r\nimport {animate,getTextWidth} from '../../utils/util';\r\nimport { useSelector } from 'react-redux';\r\n\r\n        \r\n\r\n    const Landing = () => {\r\n\r\n        const { width,fontLoaded } = useSelector(state => state.screenReducer);\r\n        var fontH = fontLoaded?'CodyStar':'Roboto'; \r\n        var fontS = fontLoaded?'Joslyn-slab':'Roboto'; \r\n\r\n        var widthHeading = getTextWidth(fontH,0.9*width,\"Chinese Character\",10);\r\n        var widthsubHeading = getTextWidth(fontS,0.45*width,\"Innovative way to learn chinese\",10,1);\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"text\">\r\n                    <div className=\"heading\" style={{fontFamily:fontH,fontSize: widthHeading-2+'px'}}>\r\n                        Chinese Character\r\n                   \r\n                    </div>\r\n                    <div className=\"subheading\" style={{fontFamily:fontS,fontSize: widthsubHeading+'px'}}>\r\n                    Innovative way to learn chinese\r\n                    </div>\r\n                    <div className=\"button\" onClick={() => animate('home-content')}>\r\n                        <span className=\"buttonText\">Know more</span>\r\n                        <img className=\"buttonImage\" src={ButtonLogo} width={35} alt=\"Logo\" />\r\n                    </div>\r\n                </div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n\r\n    export default Landing;","import React from 'react';\r\nimport './Overview.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getTextWidth } from '../../utils/util';\r\n\r\nconst Overview = () => {\r\n    const { width } = useSelector(state => state.screenReducer);\r\n    var widthHeading = getTextWidth(\"CodyStar\", 0.8 * width, 'Backend Overview', 5);\r\n    widthHeading = Math.min(80, widthHeading);\r\n    return (\r\n        <div className='overview-content'><br />\r\n            <div className='overview-heading' style={{ fontSize: widthHeading }}>\r\n                UI Overview\r\n                <div className='overview-cards'>\r\n                    <div className='overview-card'>\r\n                        <div className='card-heading'>Library Used</div>\r\n                        <li>expo : Base stuff</li>\r\n                        <li>react native : Base Stuff</li>\r\n                        <li>expo font : For loading the font</li>\r\n                        <li>expo-av: For playing audio.</li>\r\n                        <li>react-native-svg-animations : for drawing and animating character strokes in a particular order. </li>\r\n                        <li>react-native-svg : For drawing a complete character as a SVG.</li>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='overview-card'>\r\n\r\n                        <div className='card-heading'>key features</div>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <div style={{ padding: '10px', paddingRight: '2px', textDecoration: 'underline', width: '20%' }}>\r\n                                State management :\r\n                            </div>\r\n                            <li style={{ paddingLeft: '2px' }}>{\"done by implementing basic redux functionality using Context and useReducer. UseReducer takes initialState and reducer( a function that updates our state) .Context allow to pass values without having to explicitly pass a prop through every level of the tree. So we add two context's one for authorization state management and one for global state management at the top of our main app . To access the states we use useContext method . It Accepts a context object (the value returned from React.createContext) and returns the current context value for that context. The current context value is determined by the value prop of the nearest <MyContext.Provider> above the calling component in the tree.\"}</li>\r\n                        </div>\r\n\r\n                        <div style={{ display: 'flex' }}>\r\n                            <div style={{ padding: '10px', paddingRight: '2px', textDecoration: 'underline', width: '20%' }}>\r\n                                Initial Flow :\r\n                            </div>\r\n                            <li style={{ paddingLeft: '2px' }}>{\"we wait for our fonts to be loaded and once they have loaded we render our app. We are also storing a token and an email of the user in the phone's memory which we check at startup isong useEffect hook. If we find it we update our state. Dependng upon weather a user is logged in we display the defaultScreen to be either home or login. We also update state.isLoading whenever we are calling an API.\"}</li>\r\n                        </div>\r\n\r\n                        <div style={{ display: 'flex' }}>\r\n                            <div style={{ padding: '10px', paddingRight: '2px', textDecoration: 'underline', width: '20%' }}>\r\n                                Navigation :\r\n                            </div>\r\n                            <li style={{ paddingLeft: '2px' }}>{\"For navigation we use NavigationContainer in which we use Drawer.Navigation and define our own customDrawerContent in which if user is loggedIn the options available to users are [home,learn,quiz,draw,discover] else we display login/register screen and we define the component mapping for a route using the name prop in <Drawer.screen>. We also have a custom component called loading which has a small animation and we load it if isLoading is true.\"}</li>\r\n                        </div>\r\n\r\n                        <div style={{ display: 'flex' }}>\r\n                            <div style={{ padding: '10px', paddingRight: '2px', textDecoration: 'underline', width: '20%' }}>\r\n                                Character drawing and animation :\r\n                            </div>\r\n                            <li style={{ paddingLeft: '2px' }}>{\"We receive from backend stillPoints and animated points (list of String). The still point has co-ordinates and the curve parameters where as the animated path has co-ordinates which  are to be connected via straight lines which can be animated in react easily. The no. of elements in list are determined by the number of times u will have to lift the pen while drawing it.. we animate 1 element the animate other after 1st has animated to create a smoothoverall flow.\"}</li>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br /><br /><br />\r\n            <hr style={{ borderColor: 'black', width: '80%', margin: 'auto' }} />\r\n\r\n            <div className='overview-heading' style={{ fontSize: widthHeading, marginTop: '15vh' }}>\r\n                Backend Overview\r\n                <div className='overview-cards'>\r\n                    <div className='overview-card'>\r\n                        <div className='card-heading'>Library Used</div>\r\n                        <li>springboot : Base stuff</li>\r\n                        <li>selenium-chrome-driver : Automation and data gathering</li>\r\n                    </div>\r\n                    <br></br>\r\n                    <div className='overview-card'>\r\n\r\n                        <div className='card-heading'>key features</div>\r\n                        <div style={{ display: 'flex' }}>\r\n                            <div style={{ padding: '10px', paddingRight: '2px', textDecoration: 'underline', width: '14%' }}>\r\n                                DataSet :\r\n                            </div>\r\n                            <li style={{ paddingLeft: '2px' }}>{\"Dcitonary.txt and graphics.txt downloaded from htps://github.com/skishore/makemeahanzi . Processed them using a script into a sngle json file used this as a base for mongodb.\"}</li>\r\n                        </div>\r\n\r\n                        <div style={{ display: 'flex' }}>\r\n                            <div style={{ padding: '10px', paddingRight: '2px', textDecoration: 'underline', width: '14%' }}>\r\n                                Initial Work :\r\n                            </div>\r\n                            <li style={{ paddingLeft: '2px' }}>{\"From a text based dictonary i created a audio-image-text based dictonary. To do so i learned SELENIUM.. Eg. 一 means '1'/'a' and is pronounced as 'yi' . So i scrapped google images fro the top 10 image meanings and scrapped the pronounciation. and added 2 utitlity methods to generateImages and Audio. Then i manually cleaned tha images (selected a subset of images) as there were some misleading images . Eg. if we searched seven it leads to an image of actor that worked in seven movie. After the manual reviewing i added these images and audio in db .\"}</li>\r\n                        </div>\r\n\r\n                        <div style={{ display: 'flex' }}>\r\n                            <div style={{ padding: '10px', paddingRight: '2px', textDecoration: 'underline', width: '14%' }}>\r\n                                Key Features :\r\n                            </div>\r\n                            <div style={{ paddingLeft: '2px', flex: '1 1' }}>\r\n                                <li style={{ padding: '2px', paddingTop: '10px' }}>{\"Implemented search api which searches a character on the basis of it's pronounciation/actual character. which works by de-accent ing a given string .\"}</li>\r\n                                <li style={{ padding: '2px' }}>{\"Implemented a quiz api to generate a score based algorithm.\"}</li>\r\n                                <li style={{ padding: '2px' }}>{\"Implemented JWT token and used that for authentication mechanism.\"}</li>\r\n                                <li style={{ padding: '2px' }}>{\"Added Request interceptor to only allow certain endpoints to be hitted and allow certain endpoints without token.\"}</li>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br /><br /><br />\r\n            <hr style={{ borderColor: 'black', width: '80%', margin: 'auto', borderWidth:'1.2px' }} />\r\n\r\n            <div className='overview-heading' style={{ fontSize: widthHeading , marginTop: '15vh'}}>\r\n                Deployment Overview\r\n                <div className='overview-cards' style={{marginBottom:'10vh'}}>\r\n\r\n                    <div className='overview-card'>\r\n                        <div className='card-heading'>key features</div>\r\n                        <li style={{ paddingLeft: '2px' }}>{\" Build a jar file on my local system. Created an ec2-intsnance and installed java there ran the jav -jar command for running bakend\"}</li>\r\n                        <li style={{ paddingLeft: '2px' }}>{\"Build the apk using expo-cli and used that on google play developer console .\"}</li>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        <br></br>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overview;","import React from 'react';\r\nimport './Improvement.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getTextWidth } from '../../utils/util';\r\nimport Icon from '../../assets/icon.svg';\r\n\r\nconst Improvement = () => {\r\n    const { width } = useSelector(state => state.screenReducer);\r\n    var widthHeading = getTextWidth(\"CodyStar\", 0.6 * width, 'Improvements', 5);\r\n\r\n    return (\r\n        <div className='improvement-content'><br />\r\n        <div className = 'improvement-heading' style={{fontSize:widthHeading}}>Improvements</div>\r\n        <div className = 'impovement-details'>\r\n            <div style={{flex:1,marginTop:'2.5vh'}}>\r\n            The idea behind this product was to develop an all powerful learning app that grows with its userbase. Initially I thought of  an application that teaches users list of characters on the basis of a mathematical function . (like lets say similarity between characters visual or audio base) Then we cluster together characters to enhance the speed of learning . We could also with enough time analyze users to find their strengths/ weekness . This needed some sort of quiz .\r\n            </div>\r\n            <div style={{flex:1,marginTop:'2.5vh'}}>\r\n            For this initial idea I needed to develop a basic dictonary kind of application. But there was a problem I have never worked on a mobile app . So I ventured into react-native.\r\n            </div><br></br>\r\n            <div style={{flex:1,marginTop:'2.5vh',fontSize:'16px'}}>\r\n            \r\nOver time these are the various improvements that I thaught:<br/>\r\n      1. Extend it for regional languages.<br/>\r\n      2. Improve the UX.<br/>\r\n      3. Analyzing the quiz data.<br/>\r\n      4. Search engine optimization.<br/>\r\n\r\n            </div>\r\n        </div>\r\n        <img style={{position:\"absolute\",bottom:0,top:'20%',margin:'auto',left:0,right:0}} src={Icon} width={'100%'} alt=\"Logo\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Improvement;","import React, { useEffect } from 'react';\nimport NAVBAR from './screens/Navbar/Navbar';\nimport Details from './screens/DetailsScreen/Details';\nimport Home from './screens/HomeScreen/Home';\nimport Landing from './screens/LandingScreen/Landing';\nimport { resize, activeNavBarComponent,setFontLoaded } from './redux/actions';\nimport { useDispatch,useSelector } from 'react-redux';\nimport Overview from './screens/Overview/Overview';\nimport Improvement from './screens/Improvements/Improvement';\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n  document.fonts.onloadingdone = function (fontFaceSetEvent) {\n    dispatch(setFontLoaded({fontLoaded:true}));\n  };\n  const { width } = useSelector(state => state?state.screenReducer:undefined);\n  useEffect(() => {\n\n    function handleScroll(){\n      let currScroll = document.documentElement.scrollTop;\n      let home = document.getElementsByClassName('home-content')[0].offsetTop;\n      let details = document.getElementsByClassName('details-content')[0].offsetTop;\n      let overview = document.getElementsByClassName('overview-content')[0].offsetTop;\n      let improvement = document.getElementsByClassName('improvement-content')[0].offsetTop;\n      let res = -1;\n  \n      if (home < currScroll) {\n        res = 0;\n        if (details < currScroll){\n          res = 1;\n          if(overview<currScroll){\n            res=2;\n            if(improvement<currScroll)\n              res=3;\n          }\n        }\n      }\n  \n      console.log(`setting active ${res}`);\n      dispatch(activeNavBarComponent({active:res}));\n    }\n    function handleResize() {\n      setTimeout(function () {\n        dispatch(resize());\n      }, 150);\n    }\n    window.addEventListener(\"scroll\", handleScroll);\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      window.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [dispatch]);\n\n\n  return (\n    width?\n    <div>\n      <NAVBAR />\n      <Landing />\n      <Home />\n      <Details />\n      <Overview/>\n      <Improvement/>\n    </div>:null\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// will have all methods related to screen\r\n\r\nconst screenReducer = (state={},action) => {\r\n    switch(action.type){\r\n        case 'resize':\r\n            return {...state,...action.payload};\r\n        case 'activeNavBarComponent':\r\n            return {...state,...action.payload};\r\n        case 'setFontLoaded':\r\n            return {...state,...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default screenReducer;","// will have all methods related to navbar\r\n\r\nconst navbarReducer = (state={showMenu:false},action) => {\r\n    switch(action.type){\r\n        case 'setShowMenu':\r\n            return {...state,...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default navbarReducer;","import screenReducer from './screenReducer';\r\nimport navbarReducer from './navbarReducer';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst allReducers = combineReducers(\r\n    {\r\n        screenReducer,\r\n        navbarReducer\r\n    });\r\n\r\nexport default allReducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport allReducers from './redux/reducers';\nimport {Provider} from 'react-redux';\n\nconst store = createStore(allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}